import java.net.URI;
import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;


public class MapSideJoin {

	public static class MyMapper extends Mapper<LongWritable, Text, Text, Text>
	{
		private Map<String, String> abMap = new HashMap<String, String>();
		private Map<String, String> abMap1 = new HashMap<String, String>();
		
		private Text outputKey = new Text();
		private Text outputValue = new Text();
		
		protected void setup(Context context)
		{
            super.setup(context);

            URI[] files = context.getCacheFiles(); // getCacheFiles returns null

            Path p = new Path(files[0]);
       
            Path p1 = new Path(files[1]);
       
                if (p.getName().equals("salary.txt")) {
                                BufferedReader reader = new BufferedReader(new FileReader(p.toString()));
                                String line = reader.readLine();
                                while(line != null) {
                                        String[] tokens = line.split(",");
                                        String emp_id = tokens[0];
                                        String emp_sal = tokens[1];
                                        abMap.put(emp_id, emp_sal);
                                        line = reader.readLine();
                                }
                                reader.close();
                        }
                if (p1.getName().equals("desig.txt")) {
                        BufferedReader reader = new BufferedReader(new FileReader(p1.toString()));
                        String line = reader.readLine();
                        while(line != null) {
                                String[] tokens = line.split(",");
                                String emp_id = tokens[0];
                                String emp_desig = tokens[1];
                                abMap1.put(emp_id, emp_desig);
                                line = reader.readLine();
                        }
                        reader.close();
                }
       
               
                if (abMap.isEmpty()) {
                        throw new IOException("MyError:Unable to load salary data.");
                }

                if (abMap1.isEmpty()) {
                        throw new IOException("MyError:Unable to load designation data.");
                }

        }
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
