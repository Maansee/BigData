import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;

import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;







public class TextToSequence {

	public static class SeqMapper extends Mapper<LongWritable, Text, LongWritable, Text>
	{
		public void map(Text key, Text value, Context c) throws IOException, InterruptedException
		{
			String record = value.toString();
			String [] parts = record.split(",");
			int mykey = Integer.parseInt(parts[0]);
			c.write(new LongWritable(mykey), new Text(parts[1]));
		}
	}
	
	public static void main(String[] args) throws IOException {
		Configuration conf = new Configuration();
		
		Job job = Job.getInstance(conf, "Convert text to sequence");
		job.setJarByClass(TextToSequence.class);
		job.setMapperClass(SeqMapper.class);
		job.setNumReduceTasks(0);
		job.setOutputKeyClass(LongWritable.class);
		job.setOutputValueClass(Text.class);
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(SequenceFileOutputFormat.class);
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		System.exit(job.waitForCompletion(true) ? 0 : 1);
		
	}

}
